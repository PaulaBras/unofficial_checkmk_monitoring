plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.checkmk.unofficial_checkmk_monitoring"
    compileSdk 35
    ndkVersion "25.1.8937393"

    compileOptions {
        // Enable Java 8+ features on older Android versions
        // Updated syntax for core library desugaring
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.checkmk.unofficial_checkmk_monitoring"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file("${System.properties['user.home']}/.android/debug.keystore")
        }
        release {
            if (keystoreProperties['storeFile'] && 
                keystoreProperties['storePassword'] && 
                keystoreProperties['keyAlias'] && 
                keystoreProperties['keyPassword']) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            if (signingConfigs.release.storeFile) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Desugar library for Java 8+ features on older Android versions
    // Updated to the latest version
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    
    // Add missing Android X and Flutter dependencies
    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.core:core:1.13.1'
    
    // Add javax.annotation dependency for R8
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}
